# Generated by Django 3.2.6 on 2021-08-23 01:16

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(verbose_name='나이')),
                ('nickname', models.CharField(max_length=30, verbose_name='닉네임')),
                ('sex', models.CharField(choices=[('male', '남성'), ('female', '여성'), ('etc', '기타')], max_length=6, verbose_name='성별')),
                ('region', models.CharField(choices=[('서울', '서울'), ('경기 분당 수원권', '경기 분당 수원권'), ('경기 안양 과천권', '경기 안양 과천권'), ('경기 알산 파주권', '경기 알산 파주권'), ('경기 구리 남양주권', '경기 구리 남양주권'), ('경기 의정부권', '경기 의정부권'), ('인천', '인천'), ('대전', '대전'), ('충북', '충북'), ('충남', '충남'), ('강원', '강원'), ('부산', '부산'), ('경북', '경북'), ('경남', '경남'), ('대구', '대구'), ('울산', '울산'), ('광주', '광주'), ('전북', '전북'), ('전남', '전남'), ('제주', '제주')], max_length=10, verbose_name='지역')),
                ('represent_avatar', models.ImageField(upload_to=users.models.avatar_directory)),
                ('indeed_avatar', models.ImageField(upload_to=users.models.avatar_directory)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
